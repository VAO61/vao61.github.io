{"version":3,"sources":["assets/img/github-logo.svg","assets/img/icon-star.svg","assets/img/github-search-logo.svg","assets/img/icon-tile.svg","assets/img/icon-list.svg","store/reducer.js","store/constants.js","store/store.js","serviceWorker.js","browserHistory.js","components/Header/Header.jsx","components/EmptyMyList/EmptyMyList.jsx","store/actions.js","components/ResultListControl/ResultListControl.jsx","components/Checkbox/Checkbox.jsx","components/Result/Result.jsx","components/Button/Button.jsx","components/ResultTile/ResultTile.jsx","components/ResultList/ResultList.jsx","pages/MyListPage.jsx","api/getJSON.js","components/Select/Select.jsx","components/Search/Search.jsx","components/NoResultFound/NoResultFound.jsx","pages/SearchPage.jsx","pages/NotFoundPage.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["module","exports","initialState","searchList","myList","theme","reducer","state","action","type","payload","filter","item","id","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","browserHistory","createBrowserHistory","Header","className","classNames","to","alt","src","GitHubSearchLogo","EmptyMyList","GitHubLogo","addToMyList","removeFromMyList","Button","active","children","onClick","connect","dispatch","setTheme","IconTile","IconList","Checkbox","props","isExists","find","key","href","html_url","full_name","description","topics","map","tag","language","IconStar","stargazers_count","disabled","ResultList","list","slice","length","getJSON","searchValue","lang","Error","axios","get","toLowerCase","headers","Accept","Select","options","defaultValue","defaultInputValue","placeholder","onChange","classNamePrefix","updateResultSearch","array","useState","setType","setLang","setSearchValue","handleClickSearch","useCallback","a","data","items","handleChangeType","value","handleChangeLang","handleChangeSearchValue","e","target","handleKeyDown","keyCode","isDisableSearch","label","onKeyDown","autoComplete","NoResultFound","NotFoundPage","Footer","App","pathname","push","history","path","component","SearchPage","MyListPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e477b16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.45cf7971.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-star.4718135f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-search-logo.96cc10c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-tile.4e2f984b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-list.866be30c.svg\";","import {\n  UPDATE_SEARCH_LIST,\n  ADD_TO_MY_LIST,\n  REMOVE_FROM_MY_LIST,\n  SET_THEME\n} from './constants';\n\nconst initialState = {\n  searchList: [],\n  myList: [],\n  theme: 'list' // 'list' or 'tile'\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_SEARCH_LIST:\n      return {\n        ...state,\n        searchList: action.payload\n      };\n    case ADD_TO_MY_LIST:\n      return {\n        ...state,\n        myList: [...state.myList, action.payload]\n      };\n    case REMOVE_FROM_MY_LIST:\n      return {\n        ...state,\n        myList: state.myList.filter(item => item.id !== action.payload)\n      };\n    case SET_THEME:\n      return {\n        ...state,\n        theme: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const UPDATE_SEARCH_LIST = 'update-search-list';\nexport const ADD_TO_MY_LIST = 'add-to-my-list';\nexport const REMOVE_FROM_MY_LIST = 'remove-from-my-list';\nexport const SET_THEME = 'set-theme';\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nconst browserHistory = createBrowserHistory()\n\nexport default browserHistory;","import './Header.scss';\nimport GitHubSearchLogo from '../../assets/img/github-search-logo.svg';\n\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst Header = ({ className = '' }) => (\n  /**\n   * TODO: Utility 'classNames' usage\n   * https://github.com/JedWatson/classnames\n   */\n  <header className={classNames(className, 'header')}>\n    <Link to=\"/search\" className=\"link\">\n      <img className=\"header__logo\" alt=\"header logo\" src={GitHubSearchLogo} />\n    </Link>\n    <div className=\"header__item header__control\">\n      <NavLink to=\"/search\" className=\"link link_tdn header__link\">\n        Search\n      </NavLink>\n      <NavLink to=\"/my-list\" className=\"link link_tdn header__link\">\n        My list\n      </NavLink>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import '../NoResultFound/NoResultFound.scss';\nimport GitHubLogo from '../../assets/img/github-logo.svg';\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst EmptyMyList = ({ className }) => (\n  <main className={className}>\n    <section className=\"container no-results\">\n      <div className=\"no-results__container\">\n        <img className=\"no-results__bg\" src={GitHubLogo} alt=\"GitHub logo\" />\n        <div className=\"*no-results__desc\">\n          <p className=\"no-results__title\">Favorites list is empty</p>\n          <p className=\"no-results__desc\">\n            <Link className=\"link\" to=\"/search\">\n              Choose\n            </Link>\n            &nbsp;any repo and try again\n          </p>\n        </div>\n      </div>\n    </section>\n  </main>\n);\n\nexport default EmptyMyList;\n","import {\n  UPDATE_SEARCH_LIST,\n  ADD_TO_MY_LIST,\n  REMOVE_FROM_MY_LIST,\n  SET_THEME\n} from './constants';\n\nexport const updateSearchList = payload => ({\n  type: UPDATE_SEARCH_LIST,\n  payload\n});\n\nexport const addToMyList = item => ({\n  type: ADD_TO_MY_LIST,\n  payload: item\n});\n\nexport const removeFromMyList = id => ({\n  type: REMOVE_FROM_MY_LIST,\n  payload: id\n});\n\nexport const setTheme = theme => ({\n  type: SET_THEME,\n  payload: theme\n});\n","import './ResultListControl.scss';\nimport IconTile from '../../assets/img/icon-tile.svg';\nimport IconList from '../../assets/img/icon-list.svg';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { setTheme } from '../../store/actions';\n\nconst Button = ({\n  className = '',\n  active = false,\n  children,\n  onClick = () => {}\n}) => (\n  <button\n    onClick={onClick}\n    className={`${className} btn result-list-control__item ${\n      active ? 'result-list-control__item_active' : ''\n    } `}\n  >\n    {children}\n  </button>\n);\n\nconst ResultListControl = ({ className = '', theme, setTheme }) => (\n  <section className={`${className} result-list-control`}>\n    <Button active={theme === 'tile'} onClick={setTheme('tile')}>\n      <img src={IconTile} alt=\"icon tile\" />\n    </Button>\n    <Button active={theme === 'list'} onClick={setTheme('list')}>\n      <img src={IconList} alt=\"icon list\" />\n    </Button>\n  </section>\n);\n\nconst mapStateToProps = state => ({\n  theme: state.theme\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setTheme: theme => () => dispatch(setTheme(theme))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResultListControl);\n","import './Checkbox.scss';\n\nimport React from 'react';\nimport classNames from 'classnames';\n\nconst Checkbox = ({ active = false, onClick = () => {} }) => (\n  <button\n    className={classNames('btn', 'checkbox', active ? 'checkbox_active' : '')}\n    type=\"button\"\n    onClick={onClick} // addOrRemoveRepo(item)\n  />\n);\n\nexport default Checkbox;\n","import './Result.scss';\nimport IconStar from '../../assets/img/icon-star.svg';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport Checkbox from '../Checkbox/Checkbox';\nimport { addToMyList, removeFromMyList } from '../../store/actions';\n\nconst Result = ({\n  className,\n  item,\n  isExists,\n  addToMyList,\n  removeFromMyList\n}) => (\n  <div className={classNames(className, 'result')} key={item.id} id={item.id}>\n    <div className=\"result__add-remove\">\n      <Checkbox\n        active={isExists}\n        onClick={isExists ? removeFromMyList(item.id) : addToMyList(item)}\n      />\n    </div>\n    <div className=\"result__main\">\n      <p className=\"result__title\">\n        <a\n          href={item.html_url}\n          className=\"lnk result__link\"\n          key={`${item.id}_link`}\n        >\n          {item.full_name}\n        </a>\n      </p>\n      <p className=\"result__desc\" key={`${item.id}_desc`}>\n        {item.description}\n      </p>\n      <div className=\"result__tags\">\n        {item.topics &&\n          item.topics.map(tag => (\n            <span className=\"result__tag\" key={`${item.id}_tag_${tag}`}>\n              {tag}\n            </span>\n          ))}\n      </div>\n    </div>\n    <div className=\"result__details result-details\">\n      <p className=\"result-details__language\" key={`${item.id}_lang`}>\n        {item.language}\n      </p>\n      <div className=\"result-details__stars-container\">\n        <img className=\"result-details__icon\" src={IconStar} alt=\"icon star\" />\n        <p className=\"result-details__count\" key={`${item.id}_stars`}>\n          {item.stargazers_count}\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state, props) => ({\n  isExists: !!state.myList.find(item => item.id === props.item.id)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addToMyList: item => () => dispatch(addToMyList(item)),\n  removeFromMyList: id => () => dispatch(removeFromMyList(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Result);\n","import './Button.scss';\n\nimport React from 'react';\nimport classNames from 'classnames';\n\nconst Button = ({\n  className = '',\n  type = 'brand',\n  disabled = false,\n  children,\n  onClick = () => {}\n}) => (\n  <button\n    className={classNames('btn', 'btn_' + type, className)}\n    type={'button'}\n    onClick={onClick} // addOrRemoveRepo(item)\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import './ResultTile.scss';\nimport IconStar from '../../assets/img/icon-star.svg';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport Button from '../Button/Button';\nimport { addToMyList, removeFromMyList } from '../../store/actions';\n\nconst Result = ({\n  className,\n  item,\n  isExists,\n  addToMyList,\n  removeFromMyList\n}) => (\n  <div\n    className={classNames(className, 'result-tile')}\n    key={item.id}\n    id={item.id}\n  >\n    <div className=\"result-tile__details result-details\">\n      <p className=\"result-details__language\" key={`${item.id}_lang`}>\n        {item.language}\n      </p>\n      <div className=\"result-details__stars-container\">\n        <img className=\"result-details__icon\" src={IconStar} alt=\"icon star\" />\n        <p className=\"result-details__count\" key={`${item.id}_stars`}>\n          {item.stargazers_count}\n        </p>\n      </div>\n    </div>\n    <div className=\"result-tile__main\">\n      <p className=\"result-tile__title\">\n        <a\n          href={item.html_url}\n          className=\"lnk result-tile__link\"\n          key={`${item.id}_link`}\n        >\n          {item.full_name}\n        </a>\n      </p>\n      <p className=\"result-tile__desc\" key={`${item.id}_desc`}>\n        {item.description}\n      </p>\n      <div className=\"result-tile__tags\">\n        {item.topics &&\n          item.topics.map(tag => (\n            <span className=\"result-tile__tag\" key={`${item.id}_tag_${tag}`}>\n              {tag}\n            </span>\n          ))}\n      </div>\n    </div>\n    <div className=\"result-tile__add-remove\">\n      {isExists ? (\n        <Button type=\"sub-brand\" onClick={removeFromMyList(item.id)}>\n          Remove from list\n        </Button>\n      ) : (\n        <Button onClick={addToMyList(item)}>Add to list</Button>\n      )}\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state, props) => ({\n  isExists: !!state.myList.find(item => item.id === props.item.id)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addToMyList: item => () => dispatch(addToMyList(item)),\n  removeFromMyList: id => () => dispatch(removeFromMyList(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Result);\n","import './ResultList.scss';\n\nimport React from 'react';\n\nimport Result from '../Result/Result';\nimport ResultTile from '../ResultTile/ResultTile';\n\nconst ResultList = ({ className = '', list, theme }) => {\n  return (\n    <main className={className}>\n      <section className=\"result-list\">\n        {list.map(item =>\n          theme === 'list' ? (\n            <Result className=\"result-list__result\" key={item.id} item={item} />\n          ) : (\n            <ResultTile\n              className={'result-list__result'}\n              key={item.id}\n              item={item}\n            />\n          )\n        )}\n      </section>\n    </main>\n  );\n};\n\nexport default ResultList;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport EmptyMyList from '../components/EmptyMyList/EmptyMyList';\nimport ResultListControl from '../components/ResultListControl/ResultListControl';\nimport ResultList from '../components/ResultList/ResultList';\n\nconst MyListPage = ({ myList, theme }) => (\n  <Fragment>\n    <h1 className=\"container\">My List</h1>\n    {myList.length === 0 ? (\n      <EmptyMyList className=\"app__main container\" />\n    ) : (\n      <Fragment>\n        <ResultListControl className=\"result-list__control container\" />{' '}\n        <ResultList\n          className={'app__main container'}\n          list={myList}\n          theme={theme}\n        />\n      </Fragment>\n    )}\n  </Fragment>\n);\n\nconst mapStateToProps = state => ({\n  myList: state.myList.slice(0, 6),\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(MyListPage);\n","import axios from 'axios';\n\nconst getJSON = function(type, searchValue, lang) {\n  if (!type || !searchValue || !lang) {\n    throw new Error('Some Error text');\n  }\n\n  return axios.get(\n    `https://api.github.com/search/${type.toLowerCase()}?q=${searchValue}+language:${lang}&sort=stars&order=desc`,\n    {\n      headers: { Accept: 'application/vnd.github.mercy-preview+json' }\n    }\n  );\n};\n\nexport default getJSON;\n","import './Select.scss';\n\nimport React from 'react';\nimport ReactSelect from 'react-select';\n\nconst Select = ({\n  options,\n  defaultValue,\n  defaultInputValue,\n  placeholder,\n  onChange\n}) => (\n  <ReactSelect\n    className=\"search__select select\"\n    classNamePrefix=\"select\"\n    onChange={onChange}\n    options={options}\n    placeholder={placeholder}\n    defaultValue={defaultValue}\n    defaultInputValue={defaultInputValue}\n  />\n);\n\nexport default Select;\n","import './Search.scss';\n\nimport React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport getJSON from '../../api/getJSON';\nimport Select from '../Select/Select';\nimport Button from '../Button/Button';\nimport { updateSearchList } from '../../store/actions';\n\nconst Search = ({ className = '', updateResultSearch }) => {\n  const [type, setType] = useState('Repositories');\n  const [lang, setLang] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleClickSearch = useCallback(async () => {\n    const { data } = await getJSON(type, searchValue, lang);\n    updateResultSearch(data.items);\n  }, [type, lang, searchValue]);\n\n  const handleChangeType = useCallback(data => setType(data.value), []);\n  const handleChangeLang = useCallback(data => setLang(data.value), []);\n  const handleChangeSearchValue = useCallback(\n    e => setSearchValue(e.target.value),\n    []\n  );\n  const handleKeyDown = useCallback(\n    e => {\n      if (e.keyCode === 13 && !isDisableSearch) {\n        handleClickSearch();\n      }\n    },\n    [type, lang, searchValue]\n  );\n\n  const isDisableSearch = type === '' || lang === '' || searchValue === '';\n\n  return (\n    <section className={classNames(className, 'search')}>\n      <div className=\"search__item\">\n        <Select\n          options={[{ value: 'Repositories', label: 'Repositories' }]}\n          value={type}\n          onChange={handleChangeType}\n          defaultInputValue={type}\n          placeholder=\"Type\"\n        />\n      </div>\n      <div className=\"search__item\">\n        <Select\n          options={[\n            { value: 'Javascript', label: 'Javascript' },\n            { value: 'CSS', label: 'CSS' },\n            { value: 'HTML', label: 'HTML' },\n            { value: 'PHP', label: 'PHP' },\n            { value: 'Ruby', label: 'Ruby' },\n            { value: 'C++', label: 'C++' },\n            { value: 'Python', label: 'Python' },\n            { value: 'C#', label: 'C#' },\n            { value: 'Java', label: 'Java' },\n            { value: 'Go', label: 'Go' },\n            { value: 'Haskel', label: 'Haskel' }\n          ]}\n          onChange={handleChangeLang}\n          defaultInputValue={lang}\n          placeholder=\"Language\"\n        />\n      </div>\n      <div className=\"search__item\">\n        <input\n          className=\"search__input\"\n          type=\"text\"\n          value={searchValue}\n          onChange={handleChangeSearchValue}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Type here for search\"\n          autoComplete=\"off\"\n        />\n      </div>\n      <Button\n        className=\"search__submit btn btn_brand\"\n        disabled={isDisableSearch}\n        onClick={handleClickSearch}\n      >\n        search\n      </Button>\n    </section>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateResultSearch: array => dispatch(updateSearchList(array))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Search);\n","import './NoResultFound.scss';\nimport GitHubLogo from '../../assets/img/github-logo.svg';\n\nimport React from 'react';\n\nconst NoResultFound = ({ className }) => (\n  <main className={className}>\n    <section className=\"container no-results\">\n      <div className=\"no-results__container\">\n        <img className=\"no-results__bg\" src={GitHubLogo} alt=\"GitHub logo\" />\n        <div className=\"*no-results__desc\">\n          <p className=\"no-results__title\">No results found</p>\n          <p className=\"no-results__desc\">\n            select other parameters and try again\n          </p>\n        </div>\n      </div>\n    </section>\n  </main>\n);\n\nexport default NoResultFound;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport Search from '../components/Search/Search';\nimport NoResultFound from '../components/NoResultFound/NoResultFound';\nimport ResultListControl from '../components/ResultListControl/ResultListControl';\nimport ResultList from '../components/ResultList/ResultList';\n\nconst SearchPage = ({ searchList, theme }) => (\n  <Fragment>\n    <Search className=\"container\" />\n    {searchList.length === 0 ? (\n      <NoResultFound className=\"app__main container\" />\n    ) : (\n      <Fragment>\n        <ResultListControl className=\"result-list__control container\" />{' '}\n        <ResultList\n          className=\"app__main container\"\n          list={searchList}\n          theme={theme}\n        />\n      </Fragment>\n    )}\n  </Fragment>\n);\n\nconst mapStateToProps = state => ({\n  searchList: state.searchList.slice(0, 6),\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(SearchPage);\n","import '../components/NoResultFound/NoResultFound.scss';\nimport GitHubLogo from '../assets/img/github-logo.svg';\n\nimport React from 'react';\n\nconst NotFoundPage = ({ className = 'app__main' }) => (\n  <main className={className}>\n    <section className=\"container no-results\">\n      <div className=\"no-results__container\">\n        <img className=\"no-results__bg\" src={GitHubLogo} alt=\"GitHub logo\" />\n        <div className=\"*no-results__desc\">\n          <p className=\"no-results__title\">404</p>\n          <p className=\"no-results__desc\">Page not found</p>\n        </div>\n      </div>\n    </section>\n  </main>\n);\n\nexport default NotFoundPage;\n","import './Footer.scss';\n\nimport React from 'react';\nimport classNames from 'classnames';\n\nconst Footer = ({ className = '' }) => (\n  <footer className={classNames(className, 'footer')}>\n    copyright @lodossteam 2018\n  </footer>\n);\n\nexport default Footer;\n","import './assets/scss/style.scss';\nimport './App.scss';\n\nimport React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport browserHistory from './browserHistory';\n\nimport Header from './components/Header/Header';\nimport MyListPage from './pages/MyListPage';\nimport SearchPage from './pages/SearchPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  if (browserHistory.location.pathname === '/') {\n    browserHistory.push('/search');\n  }\n  return (\n    <Router history={browserHistory}>\n      <div className=\"app\">\n        <Header className=\"app__header\" />\n        <Switch>\n          <Route path=\"/search\" component={SearchPage} />\n          <Route path=\"/my-list\" component={MyListPage} />\n          <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n        <Footer className=\"app__footer\" />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport store from './store/store';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}